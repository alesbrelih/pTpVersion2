<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!-- Resource dictionary entries should be defined here. -->

    <!--DEFAULT STYLES START-->
    <SolidColorBrush x:Key="DefaultColorBrush">
        <SolidColorBrush.Color>Purple</SolidColorBrush.Color>
    </SolidColorBrush>

<Style TargetType="{x:Type Expander}">
    <Setter Property="Margin" Value="5,5,5,5"/>
</Style>
    
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="5,5,5,5"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource DefaultColorBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5,10,5"></Setter>
        <Setter Property="BorderBrush" Value="#a3a3a3"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="5,5,5,5"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type WrapPanel}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <!--DEFAULT STYLES END-->
    


    <!--WINDOW CONTROL BUTTONS START-->
    <Style x:Uid="Style_6" x:Key="WindowStateCloseImage" TargetType="{x:Type Image}">
        <Setter x:Uid="Setter_17" Property="Height" Value="15"/>
        <Setter x:Uid="Setter_18" Property="Width" Value="15"/>
        <Setter x:Uid="Setter_19" Property="Stretch" Value="Fill"/>
        <Setter x:Uid="Setter_20" Property="Source" Value="..\Resources\Images\close.png"/>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_3" Property="IsMouseOver" Value="True">
                <Setter x:Uid="Setter_21" Property="Source" Value="..\Resources\Images\close_on_mouse_over.png"></Setter>
            </Trigger>
            <Trigger x:Uid="Trigger_4" Property="IsMouseOver" Value="False">
                <Setter x:Uid="Setter_22" Property="Source" Value="..\Resources\Images\close.png"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Uid="Style_7" x:Key="WindowStateMinimizeImage" TargetType="{x:Type Image}">
        <Setter x:Uid="Setter_23" Property="Height" Value="15"/>
        <Setter x:Uid="Setter_24" Property="Width" Value="15"/>
        <Setter x:Uid="Setter_25" Property="Stretch" Value="Fill"/>
        <Setter x:Uid="Setter_26" Property="Source" Value="..\Resources\Images\minimize.png"/>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_5" Property="IsMouseOver" Value="True">
                <Setter x:Uid="Setter_27" Property="Source" Value="..\Resources\Images\minimize_on_mouse_over.png"/>
            </Trigger>
            <Trigger x:Uid="Trigger_6" Property="IsMouseOver" Value="False">
                <Setter x:Uid="Setter_28" Property="Source" Value="..\Resources\Images\minimize.png"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowStateMaximizeImage" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="Source" Value="..\Resources\Images\close.png"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="..\Resources\Images\maximize_on_mouse_over.png"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Source" Value="..\Resources\Images\maximize.png"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowStateRestoreImage" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="Source" Value="..\Resources\Images\close.png"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="..\Resources\Images\restore_on_mouse_over.png"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Source" Value="..\Resources\Images\restore.png"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>






    <Style x:Uid="Style_8" x:Key="WindowStateClose" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_29" Property="Width" Value="16"/>
        <Setter x:Uid="Setter_30" Property="Height" Value="16"/>
        <Setter x:Uid="Setter_31" Property="Margin" Value="4,0,0,0"/>
        <Setter x:Uid="Setter_32" Property="Background" Value="{StaticResource DefaultColorBrush}"/>
        <Setter x:Uid="Setter_33" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_34" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_35" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_36" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_37" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_38" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type Button}">
                    <Grid x:Uid="Chrome" x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Image x:Uid="Image_1" Style="{DynamicResource WindowStateCloseImage}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_7" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_39" Property="Foreground" Value="#ADADAD"/>
                            <Setter x:Uid="Setter_40" Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Uid="Style_9" x:Key="WindowStateMinimize" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_41" Property="Width" Value="16"/>
        <Setter x:Uid="Setter_42" Property="Height" Value="16"/>
        <Setter x:Uid="Setter_43" Property="Margin" Value="4,0,0,0"/>
        <Setter x:Uid="Setter_44" Property="Background" Value="{StaticResource DefaultColorBrush}"/>
        <Setter x:Uid="Setter_45" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_46" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_47" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_48" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_49" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_50" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_3" TargetType="{x:Type Button}">
                    <Grid x:Uid="Grid_1" x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Image x:Uid="Image_2" Style="{DynamicResource WindowStateMinimizeImage}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_8" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_51" Property="Foreground" Value="#ADADAD"/>
                            <Setter x:Uid="Setter_52" Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="WindowStateMaximize" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <!--<Setter Property="Margin" Value="4,10,4,0"/>-->
        <Setter Property="Margin" Value="4,0,0,0"/>

        <Setter Property="Background" Value="{StaticResource DefaultColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Image Style="{DynamicResource WindowStateMaximizeImage}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="WindowStateRestore" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <!--<Setter Property="Margin" Value="4,10,4,0"/>-->
        <Setter Property="Margin" Value="0,0,4,0"/>

        <Setter Property="Background" Value="{StaticResource DefaultColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Image Style="{DynamicResource WindowStateRestoreImage}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
<!--WINDOW CONTROL BUTTONS END-->
    

    
    
    <!--LABELS START-->
    <Style x:Key="LabelProperties" TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    
    <Style x:Key="LabelPropertiesDisplay" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelProperties}">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontStyle" Value="Italic"/>
    </Style>
    
    <Style x:Key="LabelErrorMessage" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelProperties}">
        <Setter Property="FontSize" Value="12"/>
    </Style>
    
    
    <Style x:Key="LabelWindowHeader" BasedOn="{StaticResource {x:Type Label}}" TargetType="{x:Type Label}" >
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>
    <!--LABELS END-->
    
    
    <!--MENU START-->
    <Style x:Key="MenuStyleBase" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="MenuItemControlTemplateBase" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="SubMenuBorder" BorderBrush="Gray" BorderThickness="1" Background="White" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="White" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="MediumPurple"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFFFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--29.1.2015-->
    <ControlTemplate x:Key="MenuItemControlTemplateBaseSubHeader" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <!--<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>-->
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <!--<ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>-->
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="#FFEE7003" BorderThickness="1" Background="#FF9B0B" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"  Height="22"  Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                </Border>
                <!--<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right">
                    <Border x:Name="SubMenuBorder" BorderBrush="Gray" BorderThickness="1" Background="White" Padding="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="30" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <!--<Rectangle Fill="#FF9B0B" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>-->
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>

                <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#FF9B0B"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7618"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>




    <ControlTemplate x:Key="MenuItemControlTemplateBaseSub" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="#FFEE7003" BorderThickness="1" Background="#FF9B0B" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                </Border>
                <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#FF9B0B"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7618"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="#FF7618"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--MENU END-->
    
    <!--GRADIENTS START-->
    <LinearGradientBrush x:Key="BackBrushButton" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0">
            <GradientStop.Color>
                <Color>Purple</Color>
            </GradientStop.Color>
        </GradientStop>
        <GradientStop Offset="1">
            <GradientStop.Color>
                <Color>#FF610F6E</Color>
            </GradientStop.Color>
        </GradientStop>
    </LinearGradientBrush>
    <!--GRADIENTS END-->
    
    
    <!--BUTTONS START-->
    <Style x:Key="ButtonWhiteForeColor" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="34"/>
    </Style>
    
    
    <Style x:Key="ButtonMainStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonWhiteForeColor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="ButtonBorder"
                            CornerRadius="3"
                            BorderThickness="1"
                            BorderBrush="White"
                            Background="{StaticResource BackBrushButton}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--ADDED 6.3.2015-->
                        <Trigger Property="IsEnabled" Value="False">

                            <Setter Property="Background" Value="MediumPurple"/>
                            <Setter Property="Opacity" Value="0.5"/>

                        </Trigger>


                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.01" ScaleY="1.01"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.1,0.1"></Setter>
    </Style>

    
    <!--BUTTONS END-->
    
    <!--GROUPBOX START-->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource DefaultColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5,5,5,5"></Setter>
    </Style>
    <!--GROUPBOX END-->
    
    <!--TABCONTROL START-->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Margin" Value="5,5,5,5"/>
    </Style>
    <!--TABCONTROL END-->
    
    <!--CHECKBOX START-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!--CHECKBOX END-->
    
    
    </ResourceDictionary>